#
# Copyright 2020 Fraunhofer Institute for Software and Systems Engineering
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

openapi: 3.0.1
info:
  title: Dataspace Connector
  description: IDS Connector originally developed by the Fraunhofer ISST
  contact:
    name: Dataspace Connector
    url: https://www.dataspace-connector.io/
    email: info@dataspace-connector.de
  license:
    name: "Apache License, Version 2.0"
    url: https://www.apache.org/licenses/LICENSE-2.0.txt
  version: 6.3.0
servers:
- url: https://localhost:8080
  description: Generated server url
tags:
- name: Data Sources/Sinks
  description: Endpoints for operations on data sources/sinks
- name: Representations
  description: Endpoints for operations on representations
- name: Apps
  description: Endpoints for app handling
- name: Artifacts
  description: Endpoints for operations on artifacts
- name: Rules
  description: Endpoints for operations on rules
- name: Contracts
  description: Endpoints for operations on contracts
- name: Endpoints
  description: Endpoints for operations on endpoints
- name: Usage Control
  description: Endpoints for contract/policy handling
- name: App Stores
  description: Endpoints for app store handling
- name: Requested Resources
  description: Endpoints for operations on requested resources
- name: Offered Resources
  description: Endpoints for operations on offered resources
- name: Connector
  description: Endpoints for connector information
- name: Catalogs
  description: Endpoints for operations on catalogs
- name: Routes
  description: Endpoints for operations on routes
- name: Configurations
  description: Endpoints for operations on configurations
- name: Subscriptions
  description: Endpoints for operations on subscriptions
- name: Messages
  description: Endpoints for invoke sending messages
- name: Agreements
  description: Endpoints for contract agreement handling
- name: Brokers
  description: Endpoints for operations on brokers
paths:
  /api/subscriptions/{id}:
    get:
      tags:
      - Subscriptions
      summary: Get a base resource by id
      operationId: get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SubscriptionView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SubscriptionView'
    put:
      tags:
      - Subscriptions
      summary: Update a base resource by id
      operationId: update
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionDesc'
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SubscriptionView'
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SubscriptionView'
        "204":
          description: No content
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SubscriptionView'
    delete:
      tags:
      - Subscriptions
      summary: Delete a base resource by id
      operationId: delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
  /api/rules/{id}:
    get:
      tags:
      - Rules
      summary: Get a base resource by id
      operationId: get_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ContractRuleView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ContractRuleView'
    put:
      tags:
      - Rules
      summary: Update a base resource by id
      operationId: update_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContractRuleDesc'
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ContractRuleView'
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ContractRuleView'
        "204":
          description: No content
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ContractRuleView'
    delete:
      tags:
      - Rules
      summary: Delete a base resource by id
      operationId: delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
  /api/rules/{id}/contracts:
    get:
      tags:
      - Rules
      summary: Get all children of a base resource with pagination
      operationId: getResource
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 30
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelContractView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelContractView'
    put:
      tags:
      - Rules
      summary: Replace the children of a base resource
      operationId: replaceResources
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
    post:
      tags:
      - Rules
      summary: Add a list of children to a base resource
      operationId: addResources
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelContractView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelContractView'
    delete:
      tags:
      - Rules
      summary: Remove a list of children from a base resource
      operationId: removeResources
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
  /api/routes/{id}:
    get:
      tags:
      - Routes
      summary: Get a base resource by id
      operationId: get_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RouteView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RouteView'
    put:
      tags:
      - Routes
      summary: Update a base resource by id
      operationId: update_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RouteDesc'
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RouteView'
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RouteView'
        "204":
          description: No content
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RouteView'
    delete:
      tags:
      - Routes
      summary: Delete a base resource by id
      operationId: delete_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
  /api/routes/{id}/steps:
    get:
      tags:
      - Routes
      summary: Get all children of a base resource with pagination
      operationId: getResource_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 30
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelRouteView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelRouteView'
    put:
      tags:
      - Routes
      summary: Replace the children of a base resource
      operationId: replaceResources_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
    post:
      tags:
      - Routes
      summary: Add a list of children to a base resource
      operationId: addResources_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelRouteView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelRouteView'
    delete:
      tags:
      - Routes
      summary: Remove a list of children from a base resource
      operationId: removeResources_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
  /api/routes/{id}/outputs:
    get:
      tags:
      - Routes
      summary: Get all children of a base resource with pagination
      operationId: getResource_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 30
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelArtifactView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelArtifactView'
    put:
      tags:
      - Routes
      summary: Replace the children of a base resource
      operationId: replaceResources_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
    post:
      tags:
      - Routes
      summary: Add a list of children to a base resource
      operationId: addResources_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelArtifactView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelArtifactView'
    delete:
      tags:
      - Routes
      summary: Remove a list of children from a base resource
      operationId: removeResources_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
  /api/routes/{id}/endpoint/start:
    put:
      tags:
      - Routes
      summary: Creates start endpoint for the route
      operationId: createStartEndpoint
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: string
              format: uuid
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: string
        "204":
          description: No content
          content:
            '*/*':
              schema:
                type: string
    delete:
      tags:
      - Routes
      summary: Deletes the start endpoint of the route
      operationId: deleteStartEndpoint
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: string
        "204":
          description: No content
          content:
            '*/*':
              schema:
                type: string
  /api/routes/{id}/endpoint/end:
    put:
      tags:
      - Routes
      summary: Creates last endpoint for the route
      operationId: createLastEndpoint
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: string
              format: uuid
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: string
        "204":
          description: No content
          content:
            '*/*':
              schema:
                type: string
    delete:
      tags:
      - Routes
      summary: Deletes the start endpoint of the route
      operationId: deleteLastEndpoint
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: string
        "204":
          description: No content
          content:
            '*/*':
              schema:
                type: string
  /api/requests/{id}:
    get:
      tags:
      - Requested Resources
      summary: Get a base resource by id
      operationId: get_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RequestedResourceView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RequestedResourceView'
    put:
      tags:
      - Requested Resources
      summary: Update a base resource by id
      operationId: update_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestedResourceDesc'
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RequestedResourceView'
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RequestedResourceView'
        "204":
          description: No content
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RequestedResourceView'
    delete:
      tags:
      - Requested Resources
      summary: Delete a base resource by id
      operationId: delete_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
  /api/requests/{id}/representations:
    get:
      tags:
      - Requested Resources
      summary: Get all children of a base resource with pagination
      operationId: getResource_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 30
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelRepresentationView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelRepresentationView'
    put:
      tags:
      - Requested Resources
      summary: Replace the children of a base resource
      operationId: replaceResources_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
    post:
      tags:
      - Requested Resources
      summary: Add a list of children to a base resource
      operationId: addResources_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelRepresentationView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelRepresentationView'
    delete:
      tags:
      - Requested Resources
      summary: Remove a list of children from a base resource
      operationId: removeResources_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
  /api/requests/{id}/catalogs:
    get:
      tags:
      - Requested Resources
      summary: Get all children of a base resource with pagination
      operationId: getResource_6
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 30
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelCatalogView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelCatalogView'
    put:
      tags:
      - Requested Resources
      summary: Replace the children of a base resource
      operationId: replaceResources_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
    post:
      tags:
      - Requested Resources
      summary: Add a list of children to a base resource
      operationId: addResources_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelCatalogView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelCatalogView'
    delete:
      tags:
      - Requested Resources
      summary: Remove a list of children from a base resource
      operationId: removeResources_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
  /api/representations/{id}:
    get:
      tags:
      - Representations
      summary: Get a base resource by id
      operationId: get_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RepresentationView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RepresentationView'
    put:
      tags:
      - Representations
      summary: Update a base resource by id
      operationId: update_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RepresentationDesc'
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RepresentationView'
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RepresentationView'
        "204":
          description: No content
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RepresentationView'
    delete:
      tags:
      - Representations
      summary: Delete a base resource by id
      operationId: delete_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
  /api/representations/{id}/requests:
    get:
      tags:
      - Representations
      summary: Get all children of a base resource with pagination
      operationId: getResource_8
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 30
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelRequestedResourceView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelRequestedResourceView'
    put:
      tags:
      - Representations
      summary: Replace the children of a base resource
      operationId: replaceResources_5
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
    post:
      tags:
      - Representations
      summary: Add a list of children to a base resource
      operationId: addResources_5
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelRequestedResourceView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelRequestedResourceView'
    delete:
      tags:
      - Representations
      summary: Remove a list of children from a base resource
      operationId: removeResources_5
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
  /api/representations/{id}/offers:
    get:
      tags:
      - Representations
      summary: Get all children of a base resource with pagination
      operationId: getResource_9
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 30
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelOfferedResourceView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelOfferedResourceView'
    put:
      tags:
      - Representations
      summary: Replace the children of a base resource
      operationId: replaceResources_6
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
    post:
      tags:
      - Representations
      summary: Add a list of children to a base resource
      operationId: addResources_6
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelOfferedResourceView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelOfferedResourceView'
    delete:
      tags:
      - Representations
      summary: Remove a list of children from a base resource
      operationId: removeResources_6
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
  /api/representations/{id}/artifacts:
    get:
      tags:
      - Representations
      summary: Get all children of a base resource with pagination
      operationId: getResource_10
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 30
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelArtifactView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelArtifactView'
    put:
      tags:
      - Representations
      summary: Replace the children of a base resource
      operationId: replaceResources_7
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
    post:
      tags:
      - Representations
      summary: Add a list of children to a base resource
      operationId: addResources_7
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelArtifactView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelArtifactView'
    delete:
      tags:
      - Representations
      summary: Remove a list of children from a base resource
      operationId: removeResources_7
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
  /api/offers/{id}:
    get:
      tags:
      - Offered Resources
      summary: Get a base resource by id
      operationId: get_5
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OfferedResourceView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OfferedResourceView'
    put:
      tags:
      - Offered Resources
      summary: Update a base resource by id
      operationId: update_5
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OfferedResourceDesc'
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OfferedResourceView'
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OfferedResourceView'
        "204":
          description: No content
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OfferedResourceView'
    delete:
      tags:
      - Offered Resources
      summary: Delete a base resource by id
      operationId: delete_5
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
  /api/offers/{id}/representations:
    get:
      tags:
      - Offered Resources
      summary: Get all children of a base resource with pagination
      operationId: getResource_12
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 30
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelRepresentationView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelRepresentationView'
    put:
      tags:
      - Offered Resources
      summary: Replace the children of a base resource
      operationId: replaceResources_8
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
    post:
      tags:
      - Offered Resources
      summary: Add a list of children to a base resource
      operationId: addResources_8
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelRepresentationView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelRepresentationView'
    delete:
      tags:
      - Offered Resources
      summary: Remove a list of children from a base resource
      operationId: removeResources_8
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
  /api/offers/{id}/contracts:
    get:
      tags:
      - Offered Resources
      summary: Get all children of a base resource with pagination
      operationId: getResource_13
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 30
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelContractView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelContractView'
    put:
      tags:
      - Offered Resources
      summary: Replace the children of a base resource
      operationId: replaceResources_9
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
    post:
      tags:
      - Offered Resources
      summary: Add a list of children to a base resource
      operationId: addResources_9
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelContractView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelContractView'
    delete:
      tags:
      - Offered Resources
      summary: Remove a list of children from a base resource
      operationId: removeResources_9
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
  /api/offers/{id}/catalogs:
    get:
      tags:
      - Offered Resources
      summary: Get all children of a base resource with pagination
      operationId: getResource_14
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 30
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelCatalogView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelCatalogView'
    put:
      tags:
      - Offered Resources
      summary: Replace the children of a base resource
      operationId: replaceResources_10
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
    post:
      tags:
      - Offered Resources
      summary: Add a list of children to a base resource
      operationId: addResources_10
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelCatalogView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelCatalogView'
    delete:
      tags:
      - Offered Resources
      summary: Remove a list of children from a base resource
      operationId: removeResources_10
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
  /api/notify:
    put:
      tags:
      - Messages
      summary: Notify all subscribers
      description: "Can be used to manually notify all subscribers about a resource\
        \ offer, representation, or artifact update."
      operationId: sendMessage
      parameters:
      - name: elementId
        in: query
        description: The element id.
        required: true
        schema:
          type: string
          format: uri
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        "404":
          description: Not found
          content:
            '*/*':
              schema:
                type: object
        "500":
          description: Internal server error
          content:
            '*/*':
              schema:
                type: object
        "204":
          description: No Content
          content:
            '*/*':
              schema:
                type: object
  /api/endpoints/{id}:
    get:
      tags:
      - Endpoints
      summary: Get a base resource by id
      operationId: get_6
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                type: object
    put:
      tags:
      - Endpoints
      summary: Update a base resource by id
      operationId: update_6
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/EndpointDesc'
              - $ref: '#/components/schemas/AppEndpointDesc'
              - $ref: '#/components/schemas/ConnectorEndpointDesc'
              - $ref: '#/components/schemas/GenericEndpointDesc'
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        "201":
          description: Created
          content:
            '*/*':
              schema:
                type: object
        "204":
          description: No content
          content:
            '*/*':
              schema:
                type: object
    delete:
      tags:
      - Endpoints
      summary: Delete a base resource by id
      operationId: delete_6
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
  /api/endpoints/{id}/datasource/{dataSourceId}:
    put:
      tags:
      - Endpoints
      summary: Creates start endpoint for the route
      operationId: linkDataSource
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: dataSourceId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
  /api/datasources/{id}:
    get:
      tags:
      - Data Sources/Sinks
      summary: Get a base resource by id
      operationId: get_7
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DataSourceView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DataSourceView'
    put:
      tags:
      - Data Sources/Sinks
      summary: Update a base resource by id
      operationId: update_7
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataSourceDesc'
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DataSourceView'
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DataSourceView'
        "204":
          description: No content
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DataSourceView'
    delete:
      tags:
      - Data Sources/Sinks
      summary: Delete a base resource by id
      operationId: delete_7
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
  /api/contracts/{id}:
    get:
      tags:
      - Contracts
      summary: Get a base resource by id
      operationId: get_8
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ContractView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ContractView'
    put:
      tags:
      - Contracts
      summary: Update a base resource by id
      operationId: update_8
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContractDesc'
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ContractView'
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ContractView'
        "204":
          description: No content
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ContractView'
    delete:
      tags:
      - Contracts
      summary: Delete a base resource by id
      operationId: delete_8
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
  /api/contracts/{id}/rules:
    get:
      tags:
      - Contracts
      summary: Get all children of a base resource with pagination
      operationId: getResource_16
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 30
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelContractRuleView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelContractRuleView'
    put:
      tags:
      - Contracts
      summary: Replace the children of a base resource
      operationId: replaceResources_11
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
    post:
      tags:
      - Contracts
      summary: Add a list of children to a base resource
      operationId: addResources_11
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelContractRuleView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelContractRuleView'
    delete:
      tags:
      - Contracts
      summary: Remove a list of children from a base resource
      operationId: removeResources_11
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
  /api/contracts/{id}/offers:
    get:
      tags:
      - Contracts
      summary: Get all children of a base resource with pagination
      operationId: getResource_18
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 30
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelOfferedResourceView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelOfferedResourceView'
    put:
      tags:
      - Contracts
      summary: Replace the children of a base resource
      operationId: replaceResources_12
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
    post:
      tags:
      - Contracts
      summary: Add a list of children to a base resource
      operationId: addResources_12
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelOfferedResourceView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelOfferedResourceView'
    delete:
      tags:
      - Contracts
      summary: Remove a list of children from a base resource
      operationId: removeResources_12
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
  /api/configurations/{id}:
    get:
      tags:
      - Configurations
      summary: Get a base resource by id
      operationId: get_9
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ConfigurationView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ConfigurationView'
    put:
      tags:
      - Configurations
      summary: Update a base resource by id
      operationId: update_9
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationDesc'
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ConfigurationView'
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ConfigurationView'
        "204":
          description: No content
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ConfigurationView'
    delete:
      tags:
      - Configurations
      summary: Delete a base resource by id
      operationId: delete_9
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
  /api/configurations/{id}/active:
    put:
      tags:
      - Configurations
      summary: Update current configuration
      operationId: setConfiguration
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        "500":
          description: Internal server error
          content:
            '*/*':
              schema:
                type: object
        "400":
          description: Bad request
          content:
            '*/*':
              schema:
                type: object
        "415":
          description: Unsupported media type
          content:
            '*/*':
              schema:
                type: object
        "204":
          description: No content
          content:
            '*/*':
              schema:
                type: object
  /api/configuration/pattern:
    get:
      tags:
      - Usage Control
      summary: Get pattern validation status
      description: Return if unsupported patterns are ignored when requesting data.
      operationId: getPatternStatus
      responses:
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  empty:
                    type: boolean
                additionalProperties:
                  type: object
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  empty:
                    type: boolean
                additionalProperties:
                  type: object
    put:
      tags:
      - Usage Control
      summary: Allow unsupported patterns
      description: Allow requesting data without policy enforcement if an unsupported
        pattern is recognized.
      operationId: setPatternStatus
      parameters:
      - name: status
        in: query
        required: true
        schema:
          type: boolean
      responses:
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  empty:
                    type: boolean
                additionalProperties:
                  type: object
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  empty:
                    type: boolean
                additionalProperties:
                  type: object
  /api/configuration/negotiation:
    get:
      tags:
      - Usage Control
      summary: Get contract negotiation status
      operationId: getNegotiationStatus
      responses:
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  empty:
                    type: boolean
                additionalProperties:
                  type: object
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  empty:
                    type: boolean
                additionalProperties:
                  type: object
    put:
      tags:
      - Usage Control
      summary: Set contract negotiation status
      operationId: setNegotiationStatus
      parameters:
      - name: status
        in: query
        required: true
        schema:
          type: boolean
      responses:
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  empty:
                    type: boolean
                additionalProperties:
                  type: object
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  empty:
                    type: boolean
                additionalProperties:
                  type: object
  /api/catalogs/{id}:
    get:
      tags:
      - Catalogs
      summary: Get a base resource by id
      operationId: get_10
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogView'
    put:
      tags:
      - Catalogs
      summary: Update a base resource by id
      operationId: update_10
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogDesc'
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogView'
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogView'
        "204":
          description: No content
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogView'
    delete:
      tags:
      - Catalogs
      summary: Delete a base resource by id
      operationId: delete_10
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
  /api/catalogs/{id}/offers:
    get:
      tags:
      - Catalogs
      summary: Get all children of a base resource with pagination
      operationId: getResource_19
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 30
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelOfferedResourceView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelOfferedResourceView'
    put:
      tags:
      - Catalogs
      summary: Replace the children of a base resource
      operationId: replaceResources_13
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
    post:
      tags:
      - Catalogs
      summary: Add a list of children to a base resource
      operationId: addResources_13
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelOfferedResourceView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelOfferedResourceView'
    delete:
      tags:
      - Catalogs
      summary: Remove a list of children from a base resource
      operationId: removeResources_13
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
  /api/brokers/{id}:
    get:
      tags:
      - Brokers
      summary: Get a base resource by id
      operationId: get_11
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BrokerView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BrokerView'
    put:
      tags:
      - Brokers
      summary: Update a base resource by id
      operationId: update_11
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BrokerDesc'
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BrokerView'
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BrokerView'
        "204":
          description: No content
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BrokerView'
    delete:
      tags:
      - Brokers
      summary: Delete a base resource by id
      operationId: delete_11
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
  /api/artifacts/{id}:
    get:
      tags:
      - Artifacts
      summary: Get a base resource by id
      operationId: get_12
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ArtifactView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ArtifactView'
    put:
      tags:
      - Artifacts
      summary: Update a base resource by id
      operationId: update_12
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArtifactDesc'
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ArtifactView'
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ArtifactView'
        "204":
          description: No content
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ArtifactView'
    delete:
      tags:
      - Artifacts
      summary: Delete a base resource by id
      operationId: delete_12
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
  /api/artifacts/{id}/representations:
    get:
      tags:
      - Artifacts
      summary: Get all children of a base resource with pagination
      operationId: getResource_22
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 30
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelRepresentationView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelRepresentationView'
    put:
      tags:
      - Artifacts
      summary: Replace the children of a base resource
      operationId: replaceResources_14
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
    post:
      tags:
      - Artifacts
      summary: Add a list of children to a base resource
      operationId: addResources_14
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelRepresentationView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelRepresentationView'
    delete:
      tags:
      - Artifacts
      summary: Remove a list of children from a base resource
      operationId: removeResources_14
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
  /api/artifacts/{id}/data:
    put:
      tags:
      - Artifacts
      operationId: putData
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          '*/*':
            schema:
              type: array
              items:
                type: string
                format: byte
        required: true
      responses:
        "401":
          description: Unauthorized
        "200":
          description: Ok
    post:
      tags:
      - Artifacts
      summary: Get data by artifact id with query input
      operationId: getData
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json: {}
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StreamingResponseBody'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StreamingResponseBody'
  /api/appstores/{id}:
    get:
      tags:
      - App Stores
      summary: Get a base resource by id
      operationId: get_13
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppStoreView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppStoreView'
    put:
      tags:
      - App Stores
      summary: Update a base resource by id
      operationId: update_13
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppStoreDesc'
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppStoreView'
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppStoreView'
        "204":
          description: No content
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppStoreView'
    delete:
      tags:
      - App Stores
      summary: Delete a base resource by id
      operationId: delete_13
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
  /api/apps/{id}/actions:
    put:
      tags:
      - Apps
      summary: Actions on apps
      description: Can be used for managing apps.
      operationId: containerManagement
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: actionType
        in: query
        required: true
        schema:
          type: string
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        "500":
          description: Internal server error
          content:
            '*/*':
              schema:
                type: object
        "400":
          description: Bad request
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                type: object
  /api/subscriptions:
    get:
      tags:
      - Subscriptions
      summary: Get a list of base resources with pagination
      operationId: getAll
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 30
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelSubscriptionView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelSubscriptionView'
    post:
      tags:
      - Subscriptions
      summary: Create a base resource
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionDesc'
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SubscriptionView'
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SubscriptionView'
  /api/rules:
    get:
      tags:
      - Rules
      summary: Get a list of base resources with pagination
      operationId: getAll_1
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 30
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelContractRuleView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelContractRuleView'
    post:
      tags:
      - Rules
      summary: Create a base resource
      operationId: create_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContractRuleDesc'
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ContractRuleView'
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ContractRuleView'
  /api/routes:
    get:
      tags:
      - Routes
      summary: Get a list of base resources with pagination
      operationId: getAll_2
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 30
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelRouteView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelRouteView'
    post:
      tags:
      - Routes
      summary: Create a base resource
      operationId: create_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RouteDesc'
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RouteView'
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RouteView'
  /api/representations:
    get:
      tags:
      - Representations
      summary: Get a list of base resources with pagination
      operationId: getAll_4
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 30
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelRepresentationView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelRepresentationView'
    post:
      tags:
      - Representations
      summary: Create a base resource
      operationId: create_3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RepresentationDesc'
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RepresentationView'
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RepresentationView'
  /api/offers:
    get:
      tags:
      - Offered Resources
      summary: Get a list of base resources with pagination
      operationId: getAll_5
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 30
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelOfferedResourceView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelOfferedResourceView'
    post:
      tags:
      - Offered Resources
      summary: Create a base resource
      operationId: create_4
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OfferedResourceDesc'
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OfferedResourceView'
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OfferedResourceView'
  /api/ids/unsubscribe:
    post:
      tags:
      - Messages
      summary: Send IDS request message for element unsubscription
      operationId: unsubscribe
      parameters:
      - name: recipient
        in: query
        description: The recipient url.
        required: true
        schema:
          type: string
          format: uri
      - name: elementId
        in: query
        description: The subscription object.
        required: true
        schema:
          type: string
          format: uri
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        "500":
          description: Internal server error
          content:
            '*/*':
              schema:
                type: object
        "417":
          description: Expectation failed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                type: object
  /api/ids/subscribe:
    post:
      tags:
      - Messages
      summary: Send IDS request message for element subscription
      operationId: subscribe
      parameters:
      - name: recipient
        in: query
        description: The recipient url.
        required: true
        schema:
          type: string
          format: uri
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionDesc'
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        "500":
          description: Internal server error
          content:
            '*/*':
              schema:
                type: object
        "502":
          description: Bad gateway
          content:
            '*/*':
              schema:
                type: object
        "417":
          description: Expectation failed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                type: object
  /api/ids/search:
    post:
      tags:
      - Messages
      summary: Full text search
      description: Can be used for full text search at an IDS component (e.g. the
        Broker).
      operationId: sendSearchMessage
      parameters:
      - name: recipient
        in: query
        description: The recipient url.
        required: true
        schema:
          type: string
          format: uri
      - name: limit
        in: query
        description: The limit value.
        required: true
        schema:
          type: integer
          format: int32
          default: 50
      - name: offset
        in: query
        description: The offset value.
        required: true
        schema:
          type: integer
          format: int32
          default: 0
      requestBody:
        content:
          application/json:
            schema:
              type: string
              description: The search term.
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        "504":
          description: Gateway timeout
          content:
            '*/*':
              schema:
                type: object
        "500":
          description: Internal server error
          content:
            '*/*':
              schema:
                type: object
        "502":
          description: Bad gateway
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                type: object
  /api/ids/resource/update:
    post:
      tags:
      - Messages
      summary: Resource update message
      description: Can be used for registering or updating a resource at an IDS broker
        or consumer connector.
      operationId: sendMessage_1
      parameters:
      - name: recipient
        in: query
        description: The recipient url.
        required: true
        schema:
          type: string
          format: uri
      - name: resourceId
        in: query
        description: The resource id.
        required: true
        schema:
          type: string
          format: uri
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        "504":
          description: Gateway timeout
          content:
            '*/*':
              schema:
                type: object
        "404":
          description: Not found
          content:
            '*/*':
              schema:
                type: object
        "500":
          description: Internal server error
          content:
            '*/*':
              schema:
                type: object
        "502":
          description: Bad gateway
          content:
            '*/*':
              schema:
                type: object
        "417":
          description: Expectation failed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                type: object
  /api/ids/resource/unavailable:
    post:
      tags:
      - Messages
      summary: Resource unavailable message
      description: Can be used for e.g. unregistering a resource at an IDS broker.
      operationId: sendMessage_2
      parameters:
      - name: recipient
        in: query
        description: The recipient url.
        required: true
        schema:
          type: string
          format: uri
      - name: resourceId
        in: query
        description: The resource id.
        required: true
        schema:
          type: string
          format: uri
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        "504":
          description: Gateway timeout
          content:
            '*/*':
              schema:
                type: object
        "404":
          description: Not found
          content:
            '*/*':
              schema:
                type: object
        "500":
          description: Internal server error
          content:
            '*/*':
              schema:
                type: object
        "502":
          description: Bad gateway
          content:
            '*/*':
              schema:
                type: object
        "417":
          description: Expectation failed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                type: object
  /api/ids/query:
    post:
      tags:
      - Messages
      summary: Query message
      description: Can be used for querying an IDS component (e.g. the Broker).
      operationId: sendQueryMessage
      parameters:
      - name: recipient
        in: query
        description: The recipient url.
        required: true
        schema:
          type: string
          format: uri
      requestBody:
        content:
          application/json:
            schema:
              type: string
              description: Database query (SparQL)
              example: |-
                SELECT ?subject ?predicate ?object
                FROM <urn:x-arq:UnionGraph>
                WHERE {
                  ?subject ?predicate ?object
                };
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        "504":
          description: Gateway timeout
          content:
            '*/*':
              schema:
                type: object
        "500":
          description: Internal server error
          content:
            '*/*':
              schema:
                type: object
        "502":
          description: Bad gateway
          content:
            '*/*':
              schema:
                type: object
        "417":
          description: Expectation failed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                type: object
  /api/ids/description:
    post:
      tags:
      - Messages
      summary: Send IDS description request message
      operationId: sendMessage_3
      parameters:
      - name: recipient
        in: query
        description: The recipient url.
        required: true
        schema:
          type: string
          format: uri
      - name: elementId
        in: query
        description: The id of the requested resource.
        required: false
        schema:
          type: string
          format: uri
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        "500":
          description: Internal server error
          content:
            '*/*':
              schema:
                type: object
        "502":
          description: Bad gateway
          content:
            '*/*':
              schema:
                type: object
        "417":
          description: Expectation failed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                type: object
  /api/ids/contract:
    post:
      tags:
      - Messages
      summary: Send IDS contract request message
      operationId: sendMessage_4
      parameters:
      - name: recipient
        in: query
        description: The recipient url.
        required: true
        schema:
          type: string
          format: uri
      - name: resourceIds
        in: query
        description: List of ids resource that should be requested.
        required: true
        schema:
          type: array
          items:
            type: string
            format: uri
      - name: artifactIds
        in: query
        description: List of ids artifacts that should be requested.
        required: true
        schema:
          type: array
          items:
            type: string
            format: uri
      - name: download
        in: query
        description: Indicates whether the connector should automatically download
          data of an artifact.
        required: true
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              type: array
              description: List of ids rules with an artifact id as target.
              items:
                oneOf:
                - $ref: '#/components/schemas/Duty'
                - $ref: '#/components/schemas/Permission'
                - $ref: '#/components/schemas/Prohibition'
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        "500":
          description: Internal server error
          content:
            '*/*':
              schema:
                type: object
        "502":
          description: Bad gateway
          content:
            '*/*':
              schema:
                type: object
        "417":
          description: Expectation failed
          content:
            '*/*':
              schema:
                type: object
        "400":
          description: Bad request
          content:
            '*/*':
              schema:
                type: object
        "201":
          description: Created
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                type: object
  /api/ids/connector/update:
    post:
      tags:
      - Messages
      summary: Connector update message
      description: Can be used for registering or updating the connector at an IDS
        broker.
      operationId: sendMessage_5
      parameters:
      - name: recipient
        in: query
        description: The recipient url.
        required: true
        schema:
          type: string
          format: uri
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        "504":
          description: Gateway timeout
          content:
            '*/*':
              schema:
                type: object
        "500":
          description: Internal server error
          content:
            '*/*':
              schema:
                type: object
        "502":
          description: Bad gateway
          content:
            '*/*':
              schema:
                type: object
        "417":
          description: Expectation failed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                type: object
  /api/ids/connector/unavailable:
    post:
      tags:
      - Messages
      summary: Connector unavailable message
      description: Can be used for unregistering the connector at an IDS broker.
      operationId: sendMessage_6
      parameters:
      - name: recipient
        in: query
        description: The recipient url.
        required: true
        schema:
          type: string
          format: uri
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        "504":
          description: Gateway timeout
          content:
            '*/*':
              schema:
                type: object
        "500":
          description: Internal server error
          content:
            '*/*':
              schema:
                type: object
        "502":
          description: Bad gateway
          content:
            '*/*':
              schema:
                type: object
        "417":
          description: Expectation failed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                type: object
  /api/ids/app:
    post:
      tags:
      - Messages
      summary: Download IDS app from AppStore
      operationId: sendMessage_7
      parameters:
      - name: recipient
        in: query
        description: The recipient url.
        required: true
        schema:
          type: string
          format: uri
      - name: appId
        in: query
        description: The app id.
        required: true
        schema:
          type: string
          format: uri
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        "500":
          description: Internal server error
          content:
            '*/*':
              schema:
                type: object
        "502":
          description: Bad gateway
          content:
            '*/*':
              schema:
                type: object
        "417":
          description: Expectation failed
          content:
            '*/*':
              schema:
                type: object
        "400":
          description: Bad request
          content:
            '*/*':
              schema:
                type: object
        "201":
          description: Created
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                type: object
  /api/examples/validation:
    post:
      tags:
      - Usage Control
      summary: Get pattern of policy
      description: Get the policy pattern represented by a given JSON string.
      operationId: getPolicyPattern
      requestBody:
        content:
          application/json:
            schema:
              type: string
              description: The JSON string representing a policy
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        "500":
          description: Internal server error
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                type: object
  /api/examples/policy:
    post:
      tags:
      - Usage Control
      summary: Get example policy
      description: Get an example policy for a given policy pattern.
      operationId: getExampleUsagePolicy
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/PatternDesc'
              - $ref: '#/components/schemas/ConnectorRestrictionDesc'
              - $ref: '#/components/schemas/DeletionDesc'
              - $ref: '#/components/schemas/DurationDesc'
              - $ref: '#/components/schemas/IntervalDesc'
              - $ref: '#/components/schemas/LoggingDesc'
              - $ref: '#/components/schemas/NotificationDesc'
              - $ref: '#/components/schemas/PermissionDesc'
              - $ref: '#/components/schemas/ProhibitionDesc'
              - $ref: '#/components/schemas/SecurityRestrictionDesc'
              - $ref: '#/components/schemas/UsageNumberDesc'
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        "400":
          description: Bad request
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                type: object
  /api/endpoints:
    get:
      tags:
      - Endpoints
      summary: Get a list of base resources with pagination
      operationId: getAll_6
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 30
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelObject'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelObject'
    post:
      tags:
      - Endpoints
      summary: Create a base resource
      operationId: create_5
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/EndpointDesc'
              - $ref: '#/components/schemas/AppEndpointDesc'
              - $ref: '#/components/schemas/ConnectorEndpointDesc'
              - $ref: '#/components/schemas/GenericEndpointDesc'
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        "201":
          description: Created
          content:
            '*/*':
              schema:
                type: object
  /api/datasources:
    get:
      tags:
      - Data Sources/Sinks
      summary: Get a list of base resources with pagination
      operationId: getAll_7
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 30
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelDataSourceView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelDataSourceView'
    post:
      tags:
      - Data Sources/Sinks
      summary: Create a base resource
      operationId: create_6
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataSourceDesc'
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DataSourceView'
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DataSourceView'
  /api/contracts:
    get:
      tags:
      - Contracts
      summary: Get a list of base resources with pagination
      operationId: getAll_8
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 30
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelContractView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelContractView'
    post:
      tags:
      - Contracts
      summary: Create a base resource
      operationId: create_7
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContractDesc'
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ContractView'
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ContractView'
  /api/configurations:
    get:
      tags:
      - Configurations
      summary: Get a list of base resources with pagination
      operationId: getAll_9
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 30
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelConfigurationView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelConfigurationView'
    post:
      tags:
      - Configurations
      summary: Create a base resource
      operationId: create_8
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationDesc'
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ConfigurationView'
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ConfigurationView'
  /api/catalogs:
    get:
      tags:
      - Catalogs
      summary: Get a list of base resources with pagination
      operationId: getAll_10
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 30
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelCatalogView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelCatalogView'
    post:
      tags:
      - Catalogs
      summary: Create a base resource
      operationId: create_9
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogDesc'
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogView'
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogView'
  /api/brokers:
    get:
      tags:
      - Brokers
      summary: Get a list of base resources with pagination
      operationId: getAll_11
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 30
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelBrokerView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelBrokerView'
    post:
      tags:
      - Brokers
      summary: Create a base resource
      operationId: create_10
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BrokerDesc'
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BrokerView'
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BrokerView'
  /api/artifacts:
    get:
      tags:
      - Artifacts
      summary: Get a list of base resources with pagination
      operationId: getAll_12
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 30
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelArtifactView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelArtifactView'
    post:
      tags:
      - Artifacts
      summary: Create a base resource
      operationId: create_11
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArtifactDesc'
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ArtifactView'
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ArtifactView'
  /api/appstores:
    get:
      tags:
      - App Stores
      summary: Get a list of base resources with pagination
      operationId: getAll_13
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 30
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelAppStoreView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelAppStoreView'
    post:
      tags:
      - App Stores
      summary: Create a base resource
      operationId: create_12
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppStoreDesc'
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppStoreView'
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppStoreView'
  /api/subscriptions/owning:
    get:
      tags:
      - Subscriptions
      operationId: getAllFiltered
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 30
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelSubscriptionView'
        "405":
          description: Not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelSubscriptionView'
  /api/requests:
    get:
      tags:
      - Requested Resources
      summary: Get a list of base resources with pagination
      operationId: getAll_3
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 30
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelRequestedResourceView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelRequestedResourceView'
  /api/requests/{id}/subscriptions:
    get:
      tags:
      - Requested Resources
      summary: Get all children of a base resource with pagination
      operationId: getResource_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 30
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelSubscriptionView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelSubscriptionView'
  /api/requests/{id}/contracts:
    get:
      tags:
      - Requested Resources
      summary: Get all children of a base resource with pagination
      operationId: getResource_5
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 30
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelContractView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelContractView'
  /api/representations/{id}/subscriptions:
    get:
      tags:
      - Representations
      summary: Get all children of a base resource with pagination
      operationId: getResource_7
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 30
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelSubscriptionView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelSubscriptionView'
  /api/offers/{id}/subscriptions:
    get:
      tags:
      - Offered Resources
      summary: Get all children of a base resource with pagination
      operationId: getResource_11
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 30
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelSubscriptionView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelSubscriptionView'
  /api/offers/{id}/brokers:
    get:
      tags:
      - Offered Resources
      summary: Get all children of a base resource with pagination
      operationId: getResource_15
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 30
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelBrokerView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelBrokerView'
  /api/contracts/{id}/requests:
    get:
      tags:
      - Contracts
      summary: Get all children of a base resource with pagination
      operationId: getResource_17
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 30
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelRequestedResourceView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelRequestedResourceView'
  /api/connector:
    get:
      tags:
      - Connector
      summary: Private IDS self-description
      operationId: getPrivateSelfDescription
      responses:
        "401":
          description: Unauthorized
          content:
            application/ld+json:
              schema:
                type: object
        "500":
          description: Internal server error
          content:
            application/ld+json:
              schema:
                type: object
        "200":
          description: Ok
          content:
            application/ld+json:
              schema:
                type: object
  /api/configurations/active:
    get:
      tags:
      - Configurations
      summary: Get current configuration
      operationId: getConfiguration
      responses:
        "401":
          description: Unauthorized
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ConfigurationView'
        "200":
          description: Ok
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ConfigurationView'
  /api/brokers/{id}/offers:
    get:
      tags:
      - Brokers
      summary: Get all children of a base resource with pagination
      operationId: getResource_20
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 30
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelOfferedResourceView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelOfferedResourceView'
  /api/artifacts/{id}/subscriptions:
    get:
      tags:
      - Artifacts
      summary: Get all children of a base resource with pagination
      operationId: getResource_21
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 30
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelSubscriptionView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelSubscriptionView'
  /api/artifacts/{id}/data/**:
    get:
      tags:
      - Artifacts
      summary: Get data by artifact id with query input
      operationId: getData_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: download
        in: query
        required: false
        schema:
          type: boolean
      - name: agreementUri
        in: query
        required: false
        schema:
          type: string
          format: uri
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StreamingResponseBody'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StreamingResponseBody'
  /api/artifacts/{id}/agreements:
    get:
      tags:
      - Artifacts
      summary: Get all children of a base resource with pagination
      operationId: getResource_23
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 30
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelAgreementView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelAgreementView'
  /api/appstores/{id}/apps:
    get:
      tags:
      - App Stores
      summary: Get all children of a base resource with pagination
      operationId: getResource_24
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 30
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelAppView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelAppView'
  /api/apps:
    get:
      tags:
      - Apps
      summary: Get a list of base resources with pagination
      operationId: getAll_14
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 30
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelAppView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelAppView'
  /api/apps/{id}:
    get:
      tags:
      - Apps
      summary: Get a base resource by id
      operationId: get_14
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppView'
    delete:
      tags:
      - Apps
      summary: Delete a base resource by id
      operationId: delete_14
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
  /api/apps/{id}/endpoints:
    get:
      tags:
      - Apps
      summary: Get all children of a base resource with pagination
      operationId: getResource_25
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 30
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelAppEndpointView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelAppEndpointView'
  /api/apps/{id}/appstore:
    get:
      tags:
      - Apps
      summary: Get appstore by app id
      description: Get appstore holding this app.
      operationId: relatedAppStore
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        "500":
          description: Internal server error
          content:
            '*/*':
              schema:
                type: object
        "400":
          description: Bad request
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                type: object
  /api/agreements:
    get:
      tags:
      - Agreements
      summary: Get a list of base resources with pagination
      operationId: getAll_15
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 30
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelAgreementView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelAgreementView'
  /api/agreements/{id}:
    get:
      tags:
      - Agreements
      summary: Get a base resource by id
      operationId: get_15
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AgreementView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AgreementView'
  /api/agreements/{id}/artifacts:
    get:
      tags:
      - Agreements
      summary: Get all children of a base resource with pagination
      operationId: getResource_26
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 30
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelArtifactView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelArtifactView'
  /:
    get:
      tags:
      - Connector
      summary: Public IDS self-description
      operationId: getPublicSelfDescription_1
      responses:
        "401":
          description: Unauthorized
          content:
            application/ld+json:
              schema:
                type: object
        "200":
          description: Ok
          content:
            application/ld+json:
              schema:
                type: object
components:
  schemas:
    SubscriptionDesc:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        target:
          type: string
          format: uri
        location:
          type: string
          format: uri
        subscriber:
          type: string
          format: uri
        pushData:
          type: boolean
        idsProtocol:
          type: boolean
          readOnly: true
      description: The subscription object.
    Links:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Link'
    SubscriptionView:
      type: object
      properties:
        creationDate:
          type: string
          format: date-time
        modificationDate:
          type: string
          format: date-time
        title:
          type: string
        description:
          type: string
        target:
          type: string
          format: uri
        location:
          type: string
          format: uri
        subscriber:
          type: string
          format: uri
        pushData:
          type: boolean
        idsProtocol:
          type: boolean
        additional:
          type: object
          additionalProperties:
            type: string
        _links:
          $ref: '#/components/schemas/Links'
    ContractRuleDesc:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        remoteId:
          type: string
          format: uri
          readOnly: true
        value:
          type: string
    ContractRuleView:
      type: object
      properties:
        creationDate:
          type: string
          format: date-time
        modificationDate:
          type: string
          format: date-time
        title:
          type: string
        description:
          type: string
        value:
          type: string
        additional:
          type: object
          additionalProperties:
            type: string
        _links:
          $ref: '#/components/schemas/Links'
    RouteDesc:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        configuration:
          type: string
        deploy:
          type: string
          enum:
          - None
          - Camel
    Endpoint:
      type: object
      properties:
        id:
          type: string
          format: uuid
        creationDate:
          type: string
          format: date-time
        modificationDate:
          type: string
          format: date-time
        additional:
          type: object
          additionalProperties:
            type: string
        deleted:
          type: boolean
        bootstrapId:
          type: string
          format: uri
        location:
          type: string
          format: uri
        docs:
          type: string
          format: uri
        info:
          type: string
        type:
          type: string
    RouteView:
      type: object
      properties:
        creationDate:
          type: string
          format: date-time
        modificationDate:
          type: string
          format: date-time
        title:
          type: string
        description:
          type: string
        configuration:
          type: string
        deploy:
          type: string
          enum:
          - None
          - Camel
        start:
          $ref: '#/components/schemas/Endpoint'
        end:
          $ref: '#/components/schemas/Endpoint'
        additional:
          type: object
          additionalProperties:
            type: string
        _links:
          $ref: '#/components/schemas/Links'
    RequestedResourceDesc:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        keywords:
          type: array
          items:
            type: string
        publisher:
          type: string
          format: uri
        language:
          type: string
        license:
          type: string
          format: uri
        sovereign:
          type: string
          format: uri
        endpointDocumentation:
          type: string
          format: uri
        samples:
          type: array
          items:
            type: string
            format: uri
        remoteId:
          type: string
          format: uri
          readOnly: true
        paymentMethod:
          type: string
          enum:
          - undefined
          - fixedPrice
          - free
          - negotiationBasis
    RequestedResourceView:
      type: object
      properties:
        creationDate:
          type: string
          format: date-time
        modificationDate:
          type: string
          format: date-time
        remoteId:
          type: string
          format: uri
        title:
          type: string
        description:
          type: string
        keywords:
          type: array
          items:
            type: string
        publisher:
          type: string
          format: uri
        language:
          type: string
        license:
          type: string
          format: uri
        version:
          type: integer
          format: int64
        sovereign:
          type: string
          format: uri
        endpointDocumentation:
          type: string
          format: uri
        paymentModality:
          type: string
          enum:
          - undefined
          - fixedPrice
          - free
          - negotiationBasis
        samples:
          type: array
          items:
            type: string
            format: uri
        additional:
          type: object
          additionalProperties:
            type: string
        _links:
          $ref: '#/components/schemas/Links'
    RepresentationDesc:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        remoteId:
          type: string
          format: uri
          readOnly: true
        mediaType:
          type: string
        language:
          type: string
        standard:
          type: string
    RepresentationView:
      type: object
      properties:
        creationDate:
          type: string
          format: date-time
        modificationDate:
          type: string
          format: date-time
        remoteId:
          type: string
          format: uri
        title:
          type: string
        description:
          type: string
        mediaType:
          type: string
        language:
          type: string
        additional:
          type: object
          additionalProperties:
            type: string
        _links:
          $ref: '#/components/schemas/Links'
    OfferedResourceDesc:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        keywords:
          type: array
          items:
            type: string
        publisher:
          type: string
          format: uri
        language:
          type: string
        license:
          type: string
          format: uri
        sovereign:
          type: string
          format: uri
        endpointDocumentation:
          type: string
          format: uri
        samples:
          type: array
          items:
            type: string
            format: uri
        paymentMethod:
          type: string
          enum:
          - undefined
          - fixedPrice
          - free
          - negotiationBasis
    OfferedResourceView:
      type: object
      properties:
        creationDate:
          type: string
          format: date-time
        modificationDate:
          type: string
          format: date-time
        title:
          type: string
        description:
          type: string
        keywords:
          type: array
          items:
            type: string
        publisher:
          type: string
          format: uri
        language:
          type: string
        license:
          type: string
          format: uri
        version:
          type: integer
          format: int64
        sovereign:
          type: string
          format: uri
        endpointDocumentation:
          type: string
          format: uri
        paymentModality:
          type: string
          enum:
          - undefined
          - fixedPrice
          - free
          - negotiationBasis
        samples:
          type: array
          items:
            type: string
            format: uri
        additional:
          type: object
          additionalProperties:
            type: string
        _links:
          $ref: '#/components/schemas/Links'
    AppEndpointDesc:
      type: object
      allOf:
      - $ref: '#/components/schemas/EndpointDesc'
      - type: object
        properties:
          endpointType:
            type: string
          endpointPort:
            type: integer
            format: int32
          mediaType:
            type: string
          protocol:
            type: string
          language:
            type: string
    ConnectorEndpointDesc:
      type: object
      allOf:
      - $ref: '#/components/schemas/EndpointDesc'
    EndpointDesc:
      required:
      - type
      type: object
      properties:
        location:
          type: string
          format: uri
        docs:
          type: string
          format: uri
        info:
          type: string
        type:
          type: string
      discriminator:
        propertyName: type
    GenericEndpointDesc:
      type: object
      allOf:
      - $ref: '#/components/schemas/EndpointDesc'
    AuthenticationDesc:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    DataSourceDesc:
      type: object
      properties:
        authentication:
          $ref: '#/components/schemas/AuthenticationDesc'
        type:
          type: string
          enum:
          - Database
          - REST
    DataSourceView:
      type: object
      properties:
        creationDate:
          type: string
          format: date-time
        modificationDate:
          type: string
          format: date-time
        id:
          type: string
          format: uuid
        type:
          type: string
          enum:
          - Database
          - REST
        _links:
          $ref: '#/components/schemas/Links'
    ContractDesc:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        remoteId:
          type: string
          format: uri
          readOnly: true
        consumer:
          type: string
          format: uri
        provider:
          type: string
          format: uri
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
    ContractView:
      type: object
      properties:
        creationDate:
          type: string
          format: date-time
        modificationDate:
          type: string
          format: date-time
        title:
          type: string
        description:
          type: string
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
        consumer:
          type: string
          format: uri
        additional:
          type: object
          additionalProperties:
            type: string
        _links:
          $ref: '#/components/schemas/Links'
    ConfigurationDesc:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        connectorId:
          type: string
          format: uri
        defaultEndpoint:
          type: string
          format: uri
          readOnly: true
        version:
          type: string
          readOnly: true
        curator:
          type: string
          format: uri
        maintainer:
          type: string
          format: uri
        inboundModelVersion:
          type: array
          readOnly: true
          items:
            type: string
        outboundModelVersion:
          type: string
          readOnly: true
        securityProfile:
          type: string
          readOnly: true
          enum:
          - Base Security
          - Trust Plus Security
          - Trust Security
        logLevel:
          type: string
          enum:
          - "Off"
          - Trace
          - Debug
          - Info
          - Warn
          - Error
        status:
          type: string
          enum:
          - Faulty
          - Offline
          - Online
        deployMode:
          type: string
          enum:
          - Productive
          - Test
        truststoreSettings:
          $ref: '#/components/schemas/TruststoreDesc'
        proxySettings:
          $ref: '#/components/schemas/ProxyDesc'
        keystoreSettings:
          $ref: '#/components/schemas/KeystoreDesc'
    KeystoreDesc:
      type: object
      properties:
        location:
          type: string
          format: uri
        password:
          type: string
        alias:
          type: string
    ProxyDesc:
      type: object
      properties:
        location:
          type: string
          format: uri
        exclusions:
          type: array
          items:
            type: string
        authentication:
          $ref: '#/components/schemas/AuthenticationDesc'
    TruststoreDesc:
      type: object
      properties:
        location:
          type: string
          format: uri
        password:
          type: string
        alias:
          type: string
    ConfigurationView:
      type: object
      properties:
        creationDate:
          type: string
          format: date-time
        modificationDate:
          type: string
          format: date-time
        connectorId:
          type: string
          format: uri
        title:
          type: string
        description:
          type: string
        defaultEndpoint:
          type: string
          format: uri
        version:
          type: string
        curator:
          type: string
          format: uri
        maintainer:
          type: string
          format: uri
        inboundModelVersion:
          type: array
          items:
            type: string
        outboundModelVersion:
          type: string
        securityProfile:
          type: string
          enum:
          - Base Security
          - Trust Plus Security
          - Trust Security
        status:
          type: string
          enum:
          - Faulty
          - Offline
          - Online
        logLevel:
          type: string
          enum:
          - "Off"
          - Trace
          - Debug
          - Info
          - Warn
          - Error
        deployMode:
          type: string
          enum:
          - Productive
          - Test
        proxy:
          $ref: '#/components/schemas/ProxyView'
        trustStore:
          $ref: '#/components/schemas/TruststoreView'
        keyStore:
          $ref: '#/components/schemas/KeystoreView'
        _links:
          $ref: '#/components/schemas/Links'
    KeystoreView:
      type: object
      properties:
        location:
          type: string
          format: uri
        alias:
          type: string
        _links:
          $ref: '#/components/schemas/Links'
    ProxyView:
      type: object
      properties:
        location:
          type: string
          format: uri
        exclusions:
          type: array
          items:
            type: string
        authenticationSet:
          type: boolean
        _links:
          $ref: '#/components/schemas/Links'
    TruststoreView:
      type: object
      properties:
        location:
          type: string
          format: uri
        alias:
          type: string
        _links:
          $ref: '#/components/schemas/Links'
    CatalogDesc:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
    CatalogView:
      type: object
      properties:
        creationDate:
          type: string
          format: date-time
        modificationDate:
          type: string
          format: date-time
        title:
          type: string
        description:
          type: string
        additional:
          type: object
          additionalProperties:
            type: string
        _links:
          $ref: '#/components/schemas/Links'
    BrokerDesc:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        location:
          type: string
          format: uri
        status:
          type: string
          readOnly: true
          enum:
          - Unregistered
          - Registered
    BrokerView:
      type: object
      properties:
        creationDate:
          type: string
          format: date-time
        modificationDate:
          type: string
          format: date-time
        location:
          type: string
          format: uri
        title:
          type: string
        description:
          type: string
        status:
          type: string
          enum:
          - Unregistered
          - Registered
        _links:
          $ref: '#/components/schemas/Links'
    ArtifactDesc:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        remoteId:
          type: string
          format: uri
          readOnly: true
        remoteAddress:
          type: string
          format: uri
          readOnly: true
        accessUrl:
          type: string
          format: url
        basicAuth:
          $ref: '#/components/schemas/AuthenticationDesc'
        apiKey:
          $ref: '#/components/schemas/AuthenticationDesc'
        value:
          type: string
        automatedDownload:
          type: boolean
    ArtifactView:
      type: object
      properties:
        creationDate:
          type: string
          format: date-time
        modificationDate:
          type: string
          format: date-time
        remoteId:
          type: string
          format: uri
        title:
          type: string
        description:
          type: string
        numAccessed:
          type: integer
          format: int64
        byteSize:
          type: integer
          format: int64
        checkSum:
          type: integer
          format: int64
        additional:
          type: object
          additionalProperties:
            type: string
        _links:
          $ref: '#/components/schemas/Links'
    AppStoreDesc:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        location:
          type: string
          format: uri
    AppStoreView:
      type: object
      properties:
        creationDate:
          type: string
          format: date-time
        modificationDate:
          type: string
          format: date-time
        location:
          type: string
          format: uri
        title:
          type: string
        description:
          type: string
        _links:
          $ref: '#/components/schemas/Links'
    PageMetadata:
      type: object
      properties:
        size:
          type: integer
          format: int64
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int64
        number:
          type: integer
          format: int64
    PagedModelContractView:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            contracts:
              type: array
              items:
                $ref: '#/components/schemas/ContractView'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    PagedModelRouteView:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            routes:
              type: array
              items:
                $ref: '#/components/schemas/RouteView'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    PagedModelArtifactView:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            artifacts:
              type: array
              items:
                $ref: '#/components/schemas/ArtifactView'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    PagedModelRepresentationView:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            representations:
              type: array
              items:
                $ref: '#/components/schemas/RepresentationView'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    PagedModelCatalogView:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            catalogs:
              type: array
              items:
                $ref: '#/components/schemas/CatalogView'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    PagedModelRequestedResourceView:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            resources:
              type: array
              items:
                $ref: '#/components/schemas/RequestedResourceView'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    PagedModelOfferedResourceView:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            resources:
              type: array
              items:
                $ref: '#/components/schemas/OfferedResourceView'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    AbstractConstraint:
      required:
      - '@id'
      - '@type'
      type: object
      properties:
        properties:
          type: object
          additionalProperties:
            type: object
        label:
          type: array
          items:
            $ref: '#/components/schemas/TypedLiteral'
        comment:
          type: array
          items:
            $ref: '#/components/schemas/TypedLiteral'
        '@id':
          type: string
          format: uri
        '@type':
          type: string
      discriminator:
        propertyName: '@type'
    Constraint:
      required:
      - '@id'
      - '@type'
      - ids:leftOperand
      - ids:operator
      type: object
      discriminator:
        propertyName: '@type'
      allOf:
      - $ref: '#/components/schemas/AbstractConstraint'
      - type: object
        properties:
          ids:unit:
            type: string
            format: uri
          ids:operator:
            type: string
            enum:
            - https://w3id.org/idsa/code/AFTER
            - https://w3id.org/idsa/code/BEFORE
            - https://w3id.org/idsa/code/CONTAINS
            - https://w3id.org/idsa/code/COVERED_BY
            - https://w3id.org/idsa/code/COVERS
            - https://w3id.org/idsa/code/DEFINES_AS
            - https://w3id.org/idsa/code/DISJOINT
            - https://w3id.org/idsa/code/DURATION_EQ
            - https://w3id.org/idsa/code/DURING
            - https://w3id.org/idsa/code/EQ
            - https://w3id.org/idsa/code/EQUALS
            - https://w3id.org/idsa/code/FINISHED_BY
            - https://w3id.org/idsa/code/FINISHES
            - https://w3id.org/idsa/code/GT
            - https://w3id.org/idsa/code/GTEQ
            - https://w3id.org/idsa/code/HAS_MEMBERSHIP
            - https://w3id.org/idsa/code/HAS_SITE
            - https://w3id.org/idsa/code/HAS_STATE
            - https://w3id.org/idsa/code/IN
            - https://w3id.org/idsa/code/INSIDE
            - https://w3id.org/idsa/code/INSIDE_NETWORK
            - https://w3id.org/idsa/code/LONGER
            - https://w3id.org/idsa/code/LONGER_EQ
            - https://w3id.org/idsa/code/LT
            - https://w3id.org/idsa/code/LTEQ
            - https://w3id.org/idsa/code/MATCHES
            - https://w3id.org/idsa/code/MEETS
            - https://w3id.org/idsa/code/MEMBER_OF
            - https://w3id.org/idsa/code/MET_BY
            - https://w3id.org/idsa/code/NOT
            - https://w3id.org/idsa/code/OVERLAPPED_BY
            - https://w3id.org/idsa/code/OVERLAPS
            - https://w3id.org/idsa/code/SAME_AS
            - https://w3id.org/idsa/code/SHORTER
            - https://w3id.org/idsa/code/SHORTER_EQ
            - https://w3id.org/idsa/code/SPATIAL_CONTAINS
            - https://w3id.org/idsa/code/SPATIAL_EQUALS
            - https://w3id.org/idsa/code/SPATIAL_MEET
            - https://w3id.org/idsa/code/SPATIAL_OVERLAP
            - https://w3id.org/idsa/code/STARTED_BY
            - https://w3id.org/idsa/code/STARTS
            - https://w3id.org/idsa/code/STRING_CONTAINS
            - https://w3id.org/idsa/code/STRING_EQ
            - https://w3id.org/idsa/code/STRING_IS_CONTAINED
            - https://w3id.org/idsa/code/TEMPORAL_DISJOINT
            - https://w3id.org/idsa/code/TEMPORAL_EQUALS
          ids:leftOperand:
            type: string
            enum:
            - https://w3id.org/idsa/code/ABSOLUTE_SPATIAL_POSITION
            - https://w3id.org/idsa/code/COUNT
            - https://w3id.org/idsa/code/DELAY
            - https://w3id.org/idsa/code/ELAPSED_TIME
            - https://w3id.org/idsa/code/ENDPOINT
            - https://w3id.org/idsa/code/EVENT
            - https://w3id.org/idsa/code/PATH
            - https://w3id.org/idsa/code/PAYMENT
            - https://w3id.org/idsa/code/PAY_AMOUNT
            - https://w3id.org/idsa/code/POLICY_EVALUATION_TIME
            - https://w3id.org/idsa/code/PURPOSE
            - https://w3id.org/idsa/code/QUANTITY
            - https://w3id.org/idsa/code/RECURRENCE_RATE
            - https://w3id.org/idsa/code/SECURITY_LEVEL
            - https://w3id.org/idsa/code/STATE
            - https://w3id.org/idsa/code/SYSTEM
            - https://w3id.org/idsa/code/USER
          ids:rightOperand:
            $ref: '#/components/schemas/RdfResource'
          ids:pipEndpoint:
            type: string
            format: uri
          ids:rightOperandReference:
            type: string
            format: uri
          '@type':
            type: string
    Duty:
      required:
      - '@id'
      - '@type'
      - ids:action
      type: object
      discriminator:
        propertyName: '@type'
      allOf:
      - $ref: '#/components/schemas/Rule'
      - type: object
        properties:
          '@type':
            type: string
    LogicalConstraint:
      required:
      - '@id'
      - '@type'
      type: object
      discriminator:
        propertyName: '@type'
      allOf:
      - $ref: '#/components/schemas/AbstractConstraint'
      - type: object
        properties:
          ids:and:
            type: array
            items:
              $ref: '#/components/schemas/Constraint'
          ids:or:
            type: array
            items:
              $ref: '#/components/schemas/Constraint'
          ids:xone:
            type: array
            items:
              $ref: '#/components/schemas/Constraint'
          '@type':
            type: string
    Permission:
      required:
      - '@id'
      - '@type'
      - ids:action
      type: object
      discriminator:
        propertyName: '@type'
      allOf:
      - $ref: '#/components/schemas/Rule'
      - type: object
        properties:
          ids:postDuty:
            type: array
            items:
              $ref: '#/components/schemas/Duty'
          ids:preDuty:
            type: array
            items:
              $ref: '#/components/schemas/Duty'
          '@type':
            type: string
    Prohibition:
      required:
      - '@id'
      - '@type'
      - ids:action
      type: object
      discriminator:
        propertyName: '@type'
      allOf:
      - $ref: '#/components/schemas/Rule'
      - type: object
        properties:
          '@type':
            type: string
    RdfResource:
      type: object
      properties:
        '@value':
          type: string
        '@type':
          type: string
    Rule:
      required:
      - '@id'
      - '@type'
      - ids:action
      type: object
      properties:
        properties:
          type: object
          additionalProperties:
            type: object
        label:
          type: array
          items:
            $ref: '#/components/schemas/TypedLiteral'
        comment:
          type: array
          items:
            $ref: '#/components/schemas/TypedLiteral'
        ids:target:
          type: string
          format: uri
        ids:constraint:
          type: array
          items:
            oneOf:
            - $ref: '#/components/schemas/LogicalConstraint'
        ids:assignee:
          type: array
          items:
            type: string
            format: uri
        ids:assigner:
          type: array
          items:
            type: string
            format: uri
        ids:action:
          type: array
          items:
            type: string
            enum:
            - https://w3id.org/idsa/code/AGGREGATE_BY_CONSUMER
            - https://w3id.org/idsa/code/AGGREGATE_BY_PROVIDER
            - https://w3id.org/idsa/code/ANONYMIZE
            - https://w3id.org/idsa/code/COMPENSATE
            - https://w3id.org/idsa/code/DELETE
            - https://w3id.org/idsa/code/DISTRIBUTE
            - https://w3id.org/idsa/code/ENCRYPT
            - https://w3id.org/idsa/code/GRANT_USE
            - https://w3id.org/idsa/code/LOG
            - https://w3id.org/idsa/code/MODIFY
            - https://w3id.org/idsa/code/NEXT_POLICY
            - https://w3id.org/idsa/code/NOTIFY
            - https://w3id.org/idsa/code/READ
            - https://w3id.org/idsa/code/TRACK_PROVENANCE
            - https://w3id.org/idsa/code/USE
            - https://w3id.org/idsa/code/WRITE
        ids:assetRefinement:
          oneOf:
          - $ref: '#/components/schemas/Constraint'
          - $ref: '#/components/schemas/LogicalConstraint'
        ids:description:
          type: array
          items:
            $ref: '#/components/schemas/TypedLiteral'
        ids:title:
          type: array
          items:
            $ref: '#/components/schemas/TypedLiteral'
        '@id':
          type: string
          format: uri
        '@type':
          type: string
      discriminator:
        propertyName: '@type'
    TypedLiteral:
      type: object
      properties:
        '@value':
          type: string
        '@type':
          type: string
        '@language':
          type: string
    ConnectorRestrictionDesc:
      type: object
      example:
        type: CONNECTOR_RESTRICTED_USAGE
        url: https://localhost:8080
      allOf:
      - $ref: '#/components/schemas/PatternDesc'
      - type: object
        properties:
          url:
            type: string
    DeletionDesc:
      type: object
      example:
        type: USAGE_UNTIL_DELETION
        start: 2020-07-11T00:00:00Z
        end: 2020-07-11T00:00:00Z
        date: 2020-07-11T00:00:00Z
      allOf:
      - $ref: '#/components/schemas/PatternDesc'
      - type: object
        properties:
          start:
            type: string
          end:
            type: string
          date:
            type: string
    DurationDesc:
      type: object
      example:
        type: DURATION_USAGE
        duration: PT1M30.5S
      allOf:
      - $ref: '#/components/schemas/PatternDesc'
      - type: object
        properties:
          duration:
            type: string
    IntervalDesc:
      type: object
      example:
        type: USAGE_DURING_INTERVAL
        start: 2020-07-11T00:00:00Z
        end: 2020-07-11T00:00:00Z
      allOf:
      - $ref: '#/components/schemas/PatternDesc'
      - type: object
        properties:
          start:
            type: string
          end:
            type: string
    LoggingDesc:
      type: object
      example:
        type: USAGE_LOGGING
      allOf:
      - $ref: '#/components/schemas/PatternDesc'
    NotificationDesc:
      type: object
      example:
        type: USAGE_NOTIFICATION
        url: https://localhost:8080/api/ids/data
      allOf:
      - $ref: '#/components/schemas/PatternDesc'
      - type: object
        properties:
          url:
            type: string
    PatternDesc:
      required:
      - type
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        type:
          type: string
      discriminator:
        propertyName: type
    PermissionDesc:
      type: object
      example:
        type: PROVIDE_ACCESS
      allOf:
      - $ref: '#/components/schemas/PatternDesc'
    ProhibitionDesc:
      type: object
      example:
        type: PROHIBIT_ACCESS
      allOf:
      - $ref: '#/components/schemas/PatternDesc'
    SecurityRestrictionDesc:
      type: object
      description: "Possible profiles are: idsc:BASE_SECURITY_PROFILE, idsc:TRUST_SECURITY_PROFILE\
        \ and idsc:TRUST_PLUS_SECURITY_PROFILE"
      example:
        type: SECURITY_PROFILE_RESTRICTED_USAGE
        profile: BASE_SECURITY_PROFILE
      allOf:
      - $ref: '#/components/schemas/PatternDesc'
      - type: object
        properties:
          profile:
            type: string
    UsageNumberDesc:
      type: object
      example:
        type: N_TIMES_USAGE
        value: "5"
      allOf:
      - $ref: '#/components/schemas/PatternDesc'
      - type: object
        properties:
          value:
            type: string
    PagedModelContractRuleView:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            rules:
              type: array
              items:
                $ref: '#/components/schemas/ContractRuleView'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    StreamingResponseBody:
      type: object
    PagedModelSubscriptionView:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            subscriptions:
              type: array
              items:
                $ref: '#/components/schemas/SubscriptionView'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    PagedModelBrokerView:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            brokers:
              type: array
              items:
                $ref: '#/components/schemas/BrokerView'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    PagedModelObject:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            objectList:
              type: array
              items:
                type: object
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    PagedModelDataSourceView:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            datasources:
              type: array
              items:
                $ref: '#/components/schemas/DataSourceView'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    PagedModelConfigurationView:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            configurations:
              type: array
              items:
                $ref: '#/components/schemas/ConfigurationView'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    AgreementView:
      type: object
      properties:
        creationDate:
          type: string
          format: date-time
        modificationDate:
          type: string
          format: date-time
        remoteId:
          type: string
          format: uri
        confirmed:
          type: boolean
        value:
          type: string
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelAgreementView:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            agreements:
              type: array
              items:
                $ref: '#/components/schemas/AgreementView'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    PagedModelAppStoreView:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            apps:
              type: array
              items:
                $ref: '#/components/schemas/AppStoreView'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    AppView:
      type: object
      properties:
        creationDate:
          type: string
          format: date-time
        modificationDate:
          type: string
          format: date-time
        remoteId:
          type: string
          format: uri
        remoteAddress:
          type: string
          format: uri
        docs:
          type: string
        envVariables:
          type: string
        storageConfig:
          type: string
        supportedPolicies:
          type: array
          items:
            type: string
            enum:
            - PROVIDE_ACCESS
            - PROHIBIT_ACCESS
            - N_TIMES_USAGE
            - DURATION_USAGE
            - USAGE_DURING_INTERVAL
            - USAGE_UNTIL_DELETION
            - USAGE_LOGGING
            - USAGE_NOTIFICATION
            - CONNECTOR_RESTRICTED_USAGE
            - SECURITY_PROFILE_RESTRICTED_USAGE
        keywords:
          type: array
          items:
            type: string
        publisher:
          type: string
          format: uri
        sovereign:
          type: string
          format: uri
        language:
          type: string
        license:
          type: string
          format: uri
        endpointDocumentation:
          type: string
          format: uri
        distributionService:
          type: string
          format: uri
        runtimeEnvironment:
          type: string
        additional:
          type: object
          additionalProperties:
            type: string
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelAppView:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            apps:
              type: array
              items:
                $ref: '#/components/schemas/AppView'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    AppEndpointView:
      type: object
      properties:
        type:
          type: string
          enum:
          - APP
          - CONNECTOR
          - GENERIC
        creationDate:
          type: string
          format: date-time
        modificationDate:
          type: string
          format: date-time
        location:
          type: string
          format: uri
        docs:
          type: string
          format: uri
        info:
          type: string
        endpointPort:
          type: integer
          format: int32
        mediaType:
          type: string
        protocol:
          type: string
        language:
          type: string
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelAppEndpointView:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            endpoints:
              type: array
              items:
                $ref: '#/components/schemas/AppEndpointView'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    Link:
      type: object
      properties:
        href:
          type: string
        hreflang:
          type: string
        title:
          type: string
        type:
          type: string
        deprecation:
          type: string
        profile:
          type: string
        name:
          type: string
        templated:
          type: boolean
